# Nav2 - Configura√ß√£o SIMPLES para rob√¥ real
# Caramelo - Sistema de navega√ß√£o aut√¥noma

# AMCL - Localiza√ß√£o ROBUSTA para Competi√ß√£o (Encoder + LiDAR h√≠brido)
amcl:
  ros__parameters:
    use_sim_time: false
    # === üéØ OTIMIZA√á√ÉO ESPEC√çFICA PARA ROTA√á√ÉO IMPRECISA ===
    # LiDAR para corre√ß√£o angular, encoder para posi√ß√£o X/Y
    alpha1: 0.4   # ‚≠ê AUMENTADO MAIS - rota√ß√£o do encoder tem alta incerteza
    alpha2: 0.2   # ‚≠ê MODERADO - ru√≠do translacional por rota√ß√£o 
    alpha3: 0.05  # ‚≠ê MUITO BAIXO - encoder X/Y √© confi√°vel
    alpha4: 0.3   # ‚≠ê ALTO - rota√ß√£o por transla√ß√£o tamb√©m imprecisa
    alpha5: 0.15  # ‚≠ê MODERADO - ru√≠do geral para permitir corre√ß√µes do LiDAR
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1   # ‚≠ê REDUZIDO - dar mais peso a leituras curtas (detec√ß√£o precisa)
    laser_likelihood_max_dist: 1.5  # ‚≠ê AUMENTADO - considera matches mais distantes
    laser_max_range: 10.0  # ‚≠ê AUMENTADO - usa alcance completo do LiDAR
    laser_min_range: 0.1   
    laser_model_type: "likelihood_field"
    max_beams: 60    # ‚≠ê AUMENTADO - mais beams para corre√ß√£o rotacional
    max_particles: 2000  # ‚≠ê AUMENTADO - mais part√≠culas para melhor localiza√ß√£o
    min_particles: 500   # ‚≠ê AUMENTADO - base maior para robustez
    odom_frame_id: "odom"
    pf_err: 0.05  # ‚≠ê RELAXADO - permite mais corre√ß√£o pelo LiDAR
    pf_z: 0.95    # ‚≠ê REDUZIDO - menos confian√ßa para permitir corre√ß√µes
    recovery_alpha_fast: 0.2   # ‚≠ê MAIS R√ÅPIDO - recupera√ß√£o ativa
    recovery_alpha_slow: 0.001 # ‚≠ê LENTO para evitar saltos
    resample_interval: 1
    robot_model_type: "nav2_amcl::OmniMotionModel"  # ‚≠ê OMNI MODEL para mecanum!
    save_pose_rate: 5.0  # ‚≠ê AUMENTADO para salvar pose mais frequentemente
    sigma_hit: 0.2  # ‚≠ê REDUZIDO - mais exigente com matches para precis√£o
    tf_broadcast: true
    transform_tolerance: 2.0  # ‚≠ê REDUZIDO para melhor sincroniza√ß√£o
    update_min_a: 0.1   # ‚≠ê MAIS FREQUENTE - update a cada 6¬∞ (melhor corre√ß√£o rotacional)
    update_min_d: 0.05  # ‚≠ê MAIS FREQUENTE - update a cada 5cm (melhor precis√£o)
    
    # === üéØ CONFIGURA√á√ÉO H√çBRIDA: ENCODER (X/Y) + LIDAR (ROTA√á√ÉO) ===
    # Usar encoder para posi√ß√£o, LiDAR para corrigir orienta√ß√£o
    global_localization: false  # ‚≠ê Evitar relocaliza√ß√µes dr√°sticas
    initial_pose_covariance_xx: 0.25      # ‚≠ê REDUZIDA - confian√ßa alta em X (encoder bom)
    initial_pose_covariance_yy: 0.25      # ‚≠ê REDUZIDA - confian√ßa alta em Y (encoder bom)  
    initial_pose_covariance_aa: 0.68      # ‚≠ê AUMENTADA - menos confian√ßa em rota√ß√£o (39¬∞)
    
    # === PESO OTIMIZADO: LiDAR dominante para corre√ß√£o angular ===
    z_hit: 0.95   # ‚≠ê M√ÅXIMO peso aos hits do LIDAR (crucial para orienta√ß√£o)
    z_max: 0.025  # ‚≠ê M√çNIMO peso para leituras no limite
    z_rand: 0.025 # ‚≠ê M√çNIMO peso para ru√≠do aleat√≥rio
    z_short: 0.0  # ‚≠ê ZERO peso para leituras curtas
    scan_topic: scan
    map_topic: map
    
    # === SINCRONIZA√á√ÉO OTIMIZADA ===
    tf_tolerance: 0.5                    # ‚≠ê REDUZIDA para sincroniza√ß√£o precisa
    laser_max_beams: 180                 # ‚≠ê AUMENTADO - usar mais dados do LiDAR
    laser_z_hit: 0.95                    # ‚≠ê MUITO ALTO - priorizar dados do LiDAR
    laser_z_rand: 0.05                   # ‚≠ê BAIXO ru√≠do aleat√≥rio
    laser_sigma_hit: 0.1                 # ‚≠ê Alta precis√£o do LIDAR
    
    set_initial_pose: true
    always_reset_initial_pose: false
    first_map_only: false
    initial_pose:
      x: 0.0
      y: 0.0
      z: 0.0
      yaw: 0.0

# Behavior Tree Navigator
bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    action_server_result_timeout: 900.0
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"

# Controller Server - DWB para Mecanum Drive Holon√¥mico
controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 10.0  # ‚≠ê AUMENTADO para controle mais responsivo
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.001  # ‚≠ê REDUZIDO - permite movimento lateral (holon√¥mico)
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] 
    controller_plugins: ["FollowPath"]  # DWB para navega√ß√£o holon√¥mica
    
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.05  # ‚≠ê REDUZIDO para WS (movimento mais preciso)
      movement_time_allowance: 30.0   # ‚≠ê AUMENTADO para manobras complexas em WS
      
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.05  # ‚≠ê MUITO RESTRITIVO para posicionamento preciso em WS
      yaw_goal_tolerance: 0.087  # ‚≠ê 5¬∞ para orienta√ß√£o precisa em WS
      
    # === DWB PLANNER - NAVEGA√á√ÉO HOLON√îMICA PARA MECANUM ===
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: -0.3  # ‚≠ê Permite movimento para tr√°s
      min_vel_y: -0.3  # ‚≠ê Permite movimento lateral (HOLON√îMICO)
      max_vel_x: 0.5   # ‚≠ê Velocidade m√°xima frente
      max_vel_y: 0.3   # ‚≠ê Velocidade lateral para mecanum
      max_vel_theta: 1.0
      min_speed_xy: 0.01  # ‚≠ê Velocidade m√≠nima para movimento suave
      max_speed_xy: 0.5   # ‚≠ê Velocidade m√°xima combinada
      min_speed_theta: 0.05
      acc_lim_x: 0.3      # ‚≠ê Acelera√ß√£o suave
      acc_lim_y: 0.3      # ‚≠ê Acelera√ß√£o lateral suave  
      acc_lim_theta: 1.5  # ‚≠ê Acelera√ß√£o angular
      decel_lim_x: -0.3   # ‚≠ê Desacelera√ß√£o
      decel_lim_y: -0.3   # ‚≠ê Desacelera√ß√£o lateral
      decel_lim_theta: -1.5
      vx_samples: 5       # ‚≠ê Amostras de velocidade X
      vy_samples: 5       # ‚≠ê Amostras de velocidade Y (holon√¥mico)
      vtheta_samples: 10  # ‚≠ê Amostras de velocidade angular
      sim_time: 2.0       # ‚≠ê Tempo de simula√ß√£o para trajet√≥rias
      sim_granularity: 0.05 # ‚≠ê Granularidade da simula√ß√£o
      sim_period: 0.1     # ‚≠ê Per√≠odo de simula√ß√£o
      discretize_by_time: false
      angular_sim_granularity: 0.1
      transform_tolerance: 0.5
      
      # === CRITICS (Avaliadores de Trajet√≥ria) ===
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      
      BaseObstacle:
        scale: 0.02  # ‚≠ê REDUZIDO - permite passar mais perto de obst√°culos quando necess√°rio
        sum_scores: false
        
      PathAlign:
        scale: 32.0
        forward_point_distance: 0.1
        
      PathDist:
        scale: 32.0
        
      GoalAlign:
        scale: 24.0  # ‚≠ê AUMENTADO - importante para orienta√ß√£o precisa em WS
        forward_point_distance: 0.1
        
      GoalDist:
        scale: 24.0  # ‚≠ê AUMENTADO - importante para posi√ß√£o precisa em WS
        
      RotateToGoal:
        scale: 32.0
        slowing_factor: 5.0
        lookahead_time: -1.0
        
      Oscillation:
        scale: 1.0
        oscillation_reset_dist: 0.05
        oscillation_reset_angle: 0.2
        oscillation_reset_time: -1.0

# Local Costmap - LiDAR para obst√°culos din√¢micos apenas
local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0  # ‚≠ê AUMENTADO para detec√ß√£o r√°pida de obst√°culos din√¢micos
      publish_frequency: 5.0  # ‚≠ê AUMENTADO para responsividade
      global_frame: odom
      robot_base_frame: base_footprint
      use_sim_time: false
      rolling_window: true
      width: 4  # ‚≠ê AUMENTADO para melhor vis√£o de obst√°culos
      height: 4 # ‚≠ê AUMENTADO para melhor vis√£o de obst√°culos
      resolution: 0.05
      transform_tolerance: 1.0
      # === FOOTPRINT PRECISO DO CARAMELO (ret√¢ngulo mais comprido que largo) ===
      footprint: "[[0.185, 0.175], [0.185, -0.175], [-0.185, -0.175], [-0.185, 0.175]]"  # ‚≠ê 37cm x 35cm
      plugins: ["obstacle_layer", "inflation_layer"]
      
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0   # ‚≠ê AUMENTADO para melhor clearing
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5   # ‚≠ê AUMENTADO para detec√ß√£o precoce
          obstacle_min_range: 0.0
          inf_is_valid: false       # ‚≠ê Ignora leituras infinitas
          clearing_on_max_reading: true  # ‚≠ê Limpa com leituras m√°ximas
          
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0    # ‚≠ê REDUZIDO - permite aproxima√ß√£o para WS
        inflation_radius: 0.20      # ‚≠ê AUMENTADO - margem de seguran√ßa maior
        inflate_unknown: false     # ‚≠ê N√£o infla √°reas desconhecidas
        inflate_around_unknown: true # ‚≠ê Infla ao redor de desconhecidas
        
      always_send_full_costmap: True

# Global Costmap - Mapa est√°tico + obst√°culos din√¢micos (SEM SOBRESCREVER MAPA)
global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: false
      # === FOOTPRINT PRECISO DO CARAMELO (ret√¢ngulo mais comprido que largo) ===
      footprint: "[[0.185, 0.175], [0.185, -0.175], [-0.185, -0.175], [-0.185, 0.175]]"  # ‚≠ê 37cm x 35cm
      resolution: 0.05
      transform_tolerance: 1.0
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        subscribe_to_updates: false  # ‚≠ê CRUCIAL: n√£o aceita updates do mapa est√°tico
        
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        combination_method: 1  # ‚≠ê MAXIMUM: LiDAR s√≥ ADICIONA obst√°culos, n√£o remove mapa est√°tico
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: False      # ‚≠ê CRUCIAL: LiDAR N√ÉO APAGA mapa est√°tico
          marking: True        # ‚≠ê LiDAR s√≥ MARCA novos obst√°culos din√¢micos
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
          inf_is_valid: false
          expected_update_rate: 10.0  # ‚≠ê Frequ√™ncia esperada do LiDAR
          observation_persistence: 2.0 # ‚≠ê Mant√©m obst√°culos por 2s ap√≥s sumirem
          max_obstacle_height: 2.0
          min_obstacle_height: 0.0
          obstacle_range: 2.5
          raytrace_range: 3.0
          
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 5.0    # ‚≠ê GLOBAL: penaliza√ß√£o padr√£o
        inflation_radius: 0.15      # ‚≠ê GLOBAL: 15cm de margem geral
        inflate_unknown: false     # ‚≠ê N√£o infla √°reas desconhecidas
        inflate_around_unknown: false # ‚≠ê N√£o infla ao redor de desconhecidas no global
        
      always_send_full_costmap: True

# Map Server
map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: "/home/work/Caramelo_workspace/maps/arena_fei/map.yaml"

# Planner Server - A* para competi√ß√£o
planner_server:
  ros__parameters:
    expected_planner_frequency: 30.0  # ‚≠ê AUMENTADO para A* mais r√°pido
    use_sim_time: false
    planner_plugins: ["GridBased"]
    
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.3  # ‚≠ê REDUZIDO para melhor precis√£o em WS
      use_astar: true  # ‚≠ê A* HABILITADO para planejamento mais r√°pido e eficiente
      allow_unknown: true
      use_final_approach_orientation: true  # ‚≠ê Manter orienta√ß√£o final (crucial para WS)
      use_quadratic_cost_penalty: false
      use_dijkstra: false  # ‚≠ê Confirmar que usa A* ao inv√©s de Dijkstra

# Smoother Server - Simplificado para ROS2 Jazzy
smoother_server:
  ros__parameters:
    use_sim_time: false
    smoother_plugins: ["simple_smoother"]
    
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: true

# Behavior Server
behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    
    spin:
      plugin: "nav2_behaviors::Spin"
    backup:
      plugin: "nav2_behaviors::BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"
    wait:
      plugin: "nav2_behaviors::Wait"
    assisted_teleop:
      plugin: "nav2_behaviors::AssistedTeleop"
      
    global_frame: map
    robot_base_frame: base_footprint
    transform_tolerance: 0.3  # AUMENTADO para sincroniza√ß√£o
    use_sim_time: false
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

# Waypoint Follower
waypoint_follower:
  ros__parameters:
    use_sim_time: false
    loop_rate: 1
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 0

# Velocity Smoother
velocity_smoother:
  ros__parameters:
    use_sim_time: false
    smoothing_frequency: 20.0
    scale_velocities: false
    feedback: "OPEN_LOOP"
    max_velocity: [0.5, 0.0, 1.0]
    min_velocity: [-0.5, 0.0, -1.0]
    max_accel: [0.5, 0.0, 3.2]
    max_decel: [-0.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
