# Nav2 - Configuração SIMPLES para robô real
# Caramelo - Sistema de navegação autônoma

# AMCL - Localização por LiDAR (PRIORIZA LIDAR sobre odometria ruim)
amcl:
  ros__parameters:
    use_sim_time: false
    alpha1: 0.8  # erro rotacional por movimento rotacional - AUMENTADO para compensar odometria ruim
    alpha2: 0.8  # erro rotacional por movimento translacional - AUMENTADO
    alpha3: 0.6  # erro translacional por movimento translacional - AUMENTADO
    alpha4: 0.6  # erro translacional por movimento rotacional - AUMENTADO
    alpha5: 0.4  # frequência de erro estranho - AUMENTADO
    base_frame_id: "base_footprint"
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 100.0
    laser_min_range: -1.0
    laser_model_type: "likelihood_field"
    max_beams: 60
    max_particles: 5000  # AUMENTADO para melhor localização
    min_particles: 1500  # AUMENTADO
    odom_frame_id: "odom"
    pf_err: 0.02  # REDUZIDO para localização mais precisa
    pf_z: 0.99
    recovery_alpha_fast: 0.2  # AUMENTADO para recuperação mais rápida
    recovery_alpha_slow: 0.002  # AUMENTADO
    resample_interval: 1
    robot_model_type: "nav2_amcl::OmniMotionModel"  # MECANUM - permite movimento lateral
    save_pose_rate: 2.0  # AUMENTADO para salvar pose mais frequentemente
    sigma_hit: 0.1  # REDUZIDO para ser mais exigente com matches
    tf_broadcast: true
    transform_tolerance: 5.0  # MUITO AUMENTADO para resolver problemas de timestamp do LiDAR
    update_min_a: 0.05  # REDUZIDO para update mais frequente 
    update_min_d: 0.05  # REDUZIDO para update mais frequente
    z_hit: 0.5  # REDUZIDO para ser menos exigente durante teste
    z_max: 0.05
    z_rand: 0.4  # AUMENTADO para tolerar mais ruído durante teste
    z_short: 0.05
    scan_topic: scan
    map_topic: map
    set_initial_pose: true
    always_reset_initial_pose: false
    first_map_only: false
    initial_pose:
      x: 0.0
      y: 0.0
      z: 0.0
      yaw: 0.0

bt_navigator:
  ros__parameters:
    use_sim_time: false
    global_frame: map
    robot_base_frame: base_footprint
    odom_topic: /odom
    bt_loop_duration: 10
    default_server_timeout: 20
    action_server_result_timeout: 900.0
    navigators: ["navigate_to_pose", "navigate_through_poses"]
    navigate_to_pose:
      plugin: "nav2_bt_navigator::NavigateToPoseNavigator"
    navigate_through_poses:
      plugin: "nav2_bt_navigator::NavigateThroughPosesNavigator"
    # Arquivo de Behavior Tree customizado para DWB
    default_nav_to_pose_bt_xml: "/home/work/Caramelo_workspace/src/caramelo_navigation/config/navigate_to_pose_dwb.xml"
    default_nav_through_poses_bt_xml: "/opt/ros/jazzy/share/nav2_bt_navigator/behavior_trees/navigate_through_poses_w_replanning_and_recovery.xml"

# Controller Server
controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 10.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"]
    controller_plugins: ["DWB"]
    
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.05  # REDUZIDO para movimento mais preciso
      movement_time_allowance: 30.0   # AUMENTADO para dar mais tempo
      
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.08  # AUMENTADO ligeiramente
      yaw_goal_tolerance: 0.15
      
    DWB:
      plugin: "dwb_core::DWBLocalPlanner"
      # CONFIGURAÇÃO PARA MOVIMENTO CONTÍNUO E SUAVE
      sim_time: 2.0  # tempo de simulação maior para suavidade
      vx_samples: 20  # mais amostras para movimento suave
      vy_samples: 10   # amostras laterais para mecanum
      vtheta_samples: 20  # amostras angulares
      
      # VELOCIDADES MÁXIMAS para mecanum
      max_vel_x: 0.3
      min_vel_x: -0.2  # permite ré
      max_vel_y: 0.25   # movimento lateral
      min_vel_y: -0.25  # movimento lateral negativo
      max_vel_theta: 0.8
      min_vel_theta: -0.8
      max_speed_xy: 0.3
      min_speed_xy: 0.0
      min_speed_theta: 0.0
      
      # ACELERAÇÕES para movimento suave
      acc_lim_x: 0.8
      acc_lim_y: 0.8  # aceleração lateral
      acc_lim_theta: 1.5
      decel_lim_x: -1.0
      decel_lim_y: -1.0
      decel_lim_theta: -2.0
      
      # GRANULARIDADE para suavidade
      linear_granularity: 0.02  # menor = mais suave
      angular_granularity: 0.02  # menor = mais suave
      
      # TOLERÂNCIAS de goal
      xy_goal_tolerance: 0.08  # 8cm de tolerância
      yaw_goal_tolerance: 0.15  # ~8.5 graus
      latch_xy_goal_tolerance: false  # permite ajustes contínuos
      
      # VELOCIDADES DE PARADA
      trans_stopped_velocity: 0.1  # considera parado com pouco movimento
      theta_stopped_velocity: 0.1
      
      # TRANSFORM tolerance
      transform_tolerance: 3.0  # aumentado para problemas de TF
      
      # CRITICS (algoritmos de avaliação) - ORDEM IMPORTANTE
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      
      # CONFIGURAÇÕES DOS CRITICS para movimento suave
      BaseObstacle.scale: 0.05  # baixo para permitir navegação próxima
      PathAlign.scale: 20.0     # seguir caminho
      PathAlign.forward_point_distance: 0.15
      GoalAlign.scale: 15.0     # alinhar com goal
      GoalAlign.forward_point_distance: 0.15
      PathDist.scale: 25.0      # distância do caminho
      GoalDist.scale: 20.0      # distância do goal
      RotateToGoal.scale: 15.0  # rotação para goal
      RotateToGoal.slowing_factor: 3.0  # suavizar rotação
      RotateToGoal.lookahead_time: 1.0  # previsão
      
      # CONTROLE DE OSCILAÇÃO
      Oscillation.scale: 1.0
      Oscillation.oscillation_reset_dist: 0.1
      Oscillation.oscillation_reset_angle: 0.3

# Local Costmap
local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_footprint
      use_sim_time: false
      rolling_window: true
      width: 3
      height: 3
      resolution: 0.05
      robot_radius: 0.37
      plugins: ["obstacle_layer", "inflation_layer"]
      
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
          
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.05  # 5cm conforme solicitado
        
      always_send_full_costmap: True

# Global Costmap
global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_footprint
      use_sim_time: false
      robot_radius: 0.37
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
        
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      #   observation_sources: scan
      #   scan:
      #     topic: /scan
      #     max_obstacle_height: 2.0
      #     clearing: True
      #     marking: True
      #     data_type: "LaserScan"
      #     raytrace_max_range: 3.0
      #     raytrace_min_range: 0.0
      #     obstacle_max_range: 2.5
      #          obstacle_min_range: 0.0
          
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.05  # 5cm conforme solicitado
        
      always_send_full_costmap: True

# Map Server
map_server:
  ros__parameters:
    use_sim_time: false
    yaml_filename: "/home/work/Caramelo_workspace/maps/arena_fei/map.yaml"

# Planner Server
planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: false
    planner_plugins: ["GridBased"]
    
    GridBased:
      plugin: "nav2_navfn_planner::NavfnPlanner"
      tolerance: 0.5
      use_astar: false
      allow_unknown: true

# Smoother Server
smoother_server:
  ros__parameters:
    use_sim_time: false
    smoother_plugins: ["simple_smoother"]
    
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

# Behavior Server
behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    
    spin:
      plugin: "nav2_behaviors::Spin"
    backup:
      plugin: "nav2_behaviors::BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors::DriveOnHeading"
    wait:
      plugin: "nav2_behaviors::Wait"
    assisted_teleop:
      plugin: "nav2_behaviors::AssistedTeleop"
      
    global_frame: map
    robot_base_frame: base_footprint
    transform_tolerance: 3.0  # MUITO AUMENTADO para resolver problemas de timestamp
    use_sim_time: false
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

# Waypoint Follower
waypoint_follower:
  ros__parameters:
    use_sim_time: false
    loop_rate: 1
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 0

# Velocity Smoother
velocity_smoother:
  ros__parameters:
    use_sim_time: false
    smoothing_frequency: 20.0
    scale_velocities: false
    feedback: "OPEN_LOOP"
    max_velocity: [0.5, 0.0, 1.0]
    min_velocity: [-0.5, 0.0, -1.0]
    max_accel: [0.5, 0.0, 3.2]
    max_decel: [-0.5, 0.0, -3.2]
    odom_topic: "odom"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
