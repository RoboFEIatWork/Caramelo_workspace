mecanum_drive_controller:
  front_left_joint_name: {
    type: string,
    default_value: "front_left_wheel_joint",
    description: "Name of the joint that controls the front left wheel",
    validation: {
      not_empty<>: []
    }
  }
  front_right_joint_name: {
    type: string,
    default_value: "front_right_wheel_joint",
    description: "Name of the joint that controls the front right wheel",
    validation: {
      not_empty<>: []
    }
  }
  back_left_joint_name: {
    type: string,
    default_value: "back_left_wheel_joint",
    description: "Name of the joint that controls the back left wheel",
    validation: {
      not_empty<>: []
    }
  }
  back_right_joint_name: {
    type: string,
    default_value: "back_right_wheel_joint",
    description: "Name of the joint that controls the back right wheel",
    validation: {
      not_empty<>: []
    }
  }
  wheel_base: {
    type: double,
    default_value: 0.470,
    description: "Longitudinal distance between front and back wheels in meters (YouBot spec)",
    validation: {
      gt<>: [0.0]
    }
  }
  wheel_separation: {
    type: double,
    default_value: 0.370,
    description: "Lateral distance between left and right wheels in meters (YouBot spec)",
    validation: {
      gt<>: [0.0]
    }
  }
  wheel_radius: {
    type: double,
    default_value: 0.05,
    description: "Radius of the wheels in meters (YouBot spec)",
    validation: {
      gt<>: [0.0]
    }
  }
  wheel_separation_multiplier: {
    type: double,
    default_value: 1.0,
    description: "Correction factor for wheel separation",
  }
  front_left_wheel_radius_multiplier: {
    type: double,
    default_value: 1.0,
    description: "Correction factor for front left wheel radius",
  }
  front_right_wheel_radius_multiplier: {
    type: double,
    default_value: 1.0,
    description: "Correction factor for front right wheel radius",
  }
  back_left_wheel_radius_multiplier: {
    type: double,
    default_value: 1.0,
    description: "Correction factor for back left wheel radius",
  }
  back_right_wheel_radius_multiplier: {
    type: double,
    default_value: 1.0,
    description: "Correction factor for back right wheel radius",
  }
  tf_frame_prefix_enable: {
    type: bool,
    default_value: false,
    description: "Enables or disables appending tf_prefix to tf frame ids",
  }
  tf_frame_prefix: {
    type: string,
    default_value: "",
    description: "Prefix to be appended to the tf frames",
  }
  odom_frame_id: {
    type: string,
    default_value: "odom",
    description: "Name of the frame for odometry",
  }
  base_frame_id: {
    type: string,
    default_value: "base_footprint",
    description: "Name of the robot's base frame",
  }
  pose_covariance_diagonal: {
    type: double_array,
    default_value: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01],
    description: "Odometry covariance for the position part of the Odometry message",
  }
  twist_covariance_diagonal: {
    type: double_array,
    default_value: [0.001, 0.001, 0.001, 0.001, 0.001, 0.01],
    description: "Odometry covariance for the velocity part of the Odometry message",
  }
  open_loop: {
    type: bool,
    default_value: false,
    description: "Calculate odometry according to the control commands",
  }
  enable_odom_tf: {
    type: bool,
    default_value: true,
    description: "Publish the odometry transform or not",
  }
  cmd_vel_timeout: {
    type: double,
    default_value: 0.5,
    description: "Timeout for velocity commands in seconds",
  }
  publish_limited_velocity: {
    type: bool,
    default_value: false,
    description: "Publish limited velocity",
  }
  velocity_rolling_window_size: {
    type: int,
    default_value: 10,
    description: "Size of the rolling window for velocity estimation",
  }
  use_stamped_vel: {
    type: bool,
    default_value: true,
    description: "Use TwistStamped instead of Twist",
  }
  linear:
    x:
      has_velocity_limits: {
        type: bool,
        default_value: false,
        description: "Enable/disable velocity limits for X direction",
      }
      has_acceleration_limits: {
        type: bool,
        default_value: false,
        description: "Enable/disable acceleration limits for X direction",
      }
      has_jerk_limits: {
        type: bool,
        default_value: false,
        description: "Enable/disable jerk limits for X direction",
      }
      max_velocity: {
        type: double,
        default_value: 0.0,
        description: "Maximum velocity in X direction",
      }
      min_velocity: {
        type: double,
        default_value: 0.0,
        description: "Minimum velocity in X direction",
      }
      max_acceleration: {
        type: double,
        default_value: 0.0,
        description: "Maximum acceleration in X direction",
      }
      min_acceleration: {
        type: double,
        default_value: 0.0,
        description: "Minimum acceleration in X direction",
      }
      max_jerk: {
        type: double,
        default_value: 0.0,
        description: "Maximum jerk in X direction",
      }
      min_jerk: {
        type: double,
        default_value: 0.0,
        description: "Minimum jerk in X direction",
      }
    y:
      has_velocity_limits: {
        type: bool,
        default_value: false,
        description: "Enable/disable velocity limits for Y direction",
      }
      has_acceleration_limits: {
        type: bool,
        default_value: false,
        description: "Enable/disable acceleration limits for Y direction",
      }
      has_jerk_limits: {
        type: bool,
        default_value: false,
        description: "Enable/disable jerk limits for Y direction",
      }
      max_velocity: {
        type: double,
        default_value: 0.0,
        description: "Maximum velocity in Y direction",
      }
      min_velocity: {
        type: double,
        default_value: 0.0,
        description: "Minimum velocity in Y direction",
      }
      max_acceleration: {
        type: double,
        default_value: 0.0,
        description: "Maximum acceleration in Y direction",
      }
      min_acceleration: {
        type: double,
        default_value: 0.0,
        description: "Minimum acceleration in Y direction",
      }
      max_jerk: {
        type: double,
        default_value: 0.0,
        description: "Maximum jerk in Y direction",
      }
      min_jerk: {
        type: double,
        default_value: 0.0,
        description: "Minimum jerk in Y direction",
      }
  angular:
    z:
      has_velocity_limits: {
        type: bool,
        default_value: false,
        description: "Enable/disable angular velocity limits",
      }
      has_acceleration_limits: {
        type: bool,
        default_value: false,
        description: "Enable/disable angular acceleration limits",
      }
      has_jerk_limits: {
        type: bool,
        default_value: false,
        description: "Enable/disable angular jerk limits",
      }
      max_velocity: {
        type: double,
        default_value: 0.0,
        description: "Maximum angular velocity",
      }
      min_velocity: {
        type: double,
        default_value: 0.0,
        description: "Minimum angular velocity",
      }
      max_acceleration: {
        type: double,
        default_value: 0.0,
        description: "Maximum angular acceleration",
      }
      min_acceleration: {
        type: double,
        default_value: 0.0,
        description: "Minimum angular acceleration",
      }
      max_jerk: {
        type: double,
        default_value: 0.0,
        description: "Maximum angular jerk",
      }
      min_jerk: {
        type: double,
        default_value: 0.0,
        description: "Minimum angular jerk",
      }
